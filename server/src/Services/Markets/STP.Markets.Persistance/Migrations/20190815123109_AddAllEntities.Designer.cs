// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STP.Markets.Persistance.Context;

namespace STP.Markets.Persistance.Migrations
{
    [DbContext(typeof(MarketsDbContext))]
    [Migration("20190815123109_AddAllEntities")]
    partial class AddAllEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("STP.Markets.Domain.Entities.Market", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<int>("Currency");

                    b.Property<int>("Kind");

                    b.Property<double>("MaxPrice");

                    b.Property<double>("MinPrice");

                    b.Property<string>("Name");

                    b.Property<double>("TickSize");

                    b.HasKey("Id");

                    b.ToTable("markets");
                });

            modelBuilder.Entity("STP.Markets.Domain.Entities.MarketWatchlist", b =>
                {
                    b.Property<long>("MarketId");

                    b.Property<long>("WatchlistId");

                    b.HasKey("MarketId", "WatchlistId");

                    b.HasIndex("WatchlistId");

                    b.ToTable("MarketWatchlists");
                });

            modelBuilder.Entity("STP.Markets.Domain.Entities.Watchlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("watchlists");
                });

            modelBuilder.Entity("STP.Markets.Domain.Entities.MarketWatchlist", b =>
                {
                    b.HasOne("STP.Markets.Domain.Entities.Market", "Market")
                        .WithMany("MarketWatchlists")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("STP.Markets.Domain.Entities.Watchlist", "Watchlist")
                        .WithMany("MarketWatchlists")
                        .HasForeignKey("WatchlistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
